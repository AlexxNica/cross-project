stages:
  - coredns-build-branch
  - coredns-deploy

before_script:
  - export BASE_URL=${BASE_URL:-$(echo $CI_PROJECT_URL |  cut -d'/' -f1-3)}
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)

coredns-build-branch:
  image: buildpack-deps:stretch
  stage: coredns-build-branch
  script:
    - apt update && apt -y install jq
    - echo "$COREDNS_BRANCH"
    - mkdir ./data
    - >
      if [ -z "${COREDNS_BRANCH}" ]; then
        exit 0 #Should Show Skipped on Gitlab CI FIXME
      else
        echo "Checking for Latest Build"
        curl -s -L -o data/coredns.url "${BASE_URL}/coredns/coredns/builds/artifacts/${COREDNS_BRANCH}/file/release.env?job=release"
        if cat data/coredns.url | sed -n 's/.*href="\([^"]*\).*/\1/p' | grep artifacts/raw ; then
        COREDNS_RELEASE_ENV=$(cat data/coredns.url | sed -n 's/.*href="\([^"]*\).*/\1/p' | grep artifacts/raw | tail -1)
        curl -o data/coredns.env -L ${BASE_URL}/$COREDNS_RELEASE_ENV
        cat data/coredns.env
        else
          PROJECT_PIPELINE=$(curl -X POST -F token=$CORE_DNS_CI_JOB_TOKEN -F ref=${COREDNS_BRANCH} -F "variables[BUILD_TRIGGER]=yes" https://gitlab.cncf.ci/api/v4/projects/9/trigger/pipeline | jq '.id')
          echo 'Wait for Build "FIX ME / HACK"'
          until [ "$JOB_STATUS" == '"success"' ]; do JOB_STATUS="$(curl -s --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/9/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="container") | .status')" ; sleep 0.5 ; done ; echo 'Build Compleate'
          PROJECT_JOB=$(curl --header "PRIVATE-TOKEN:${TOKEN}" "https://gitlab.cncf.ci/api/v4/projects/9/pipelines/${PROJECT_PIPELINE}/jobs?scope=success" | jq '.[] | select(.name=="container") | .id') 
          curl -s -o data/coredns.env -L "$BASE_URL/coredns/coredns/-/jobs/${PROJECT_JOB}/artifacts/raw/release.env"
          cat data/coredns.env
        fi
      fi
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - ./data

aws-coredns-deploy:
  stage: coredns-deploy
  script:
    - >
      if [ -z "$AWS_KUBECONFIG" ]; then
        exit 0 #Should Show Skipped on Gitlab CI FIXME
    - cat "${AWS_KUBECONFIG}" | tee ./aws-kubeconfig
    - export KUBECONFIG=./aws-kubeconfig
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - ./data

gke-coredns-deploy:
  stage: coredns-deploy
  script:
    - >
      if [ -z "$GKE_KUBECONFIG" ]; then
        exit 0 #Should Show Skipped on Gitlab CI FIXME
    - cat "${GKE_KUBECONFIG}" | tee ./gke-kubeconfig
    - export KUBECONFIG=./gke-kubeconfig
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - ./data

gce-coredns-deploy:
  stage: coredns-deploy
  script:
    - >
      if [ -z "$GCE_KUBECONFIG" ]; then
        exit 0 #Should Show Skipped on Gitlab CI FIXME
    - cat "${GCE_KUBECONFIG}" | tee ./gce-kubeconfig
    - export KUBECONFIG=./gce-kubeconfig
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - ./data

packet-coredns-deploy:
  stage: coredns-deploy
  script:
    - >
      if [ -z "$PACKET_KUBECONFIG" ]; then
        exit 0 #Should Show Skipped on Gitlab CI FIXME
    - cat "${PACKET_KUBECONFIG}" | tee ./packet-kubeconfig
    - export KUBECONFIG=./packet-kubeconfig
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 5 weeks
    paths:
      - ./data

